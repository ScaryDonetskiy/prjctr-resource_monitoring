version: "3.9"

services:
  telegraf:
    image: telegraf:1.25
    user: telegraf:telegraf
    volumes:
      - ./.infrastructure/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8125:8125/udp"
    depends_on:
      influxdb:
        condition: service_started
      mongodb:
        condition: service_started
      elasticsearch:
        condition: service_healthy
      nginx:
        condition: service_started

    links:
      - influxdb
      - mongodb
      - elasticsearch
      - nginx

  influxdb:
#    image: influxdb:2.6
    image: influxdb:1.8
    env_file: .infrastructure/influxdb.env
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb

  grafana:
    image: grafana/grafana:9.3.6
    env_file: .infrastructure/grafana.env
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./.infrastructure/grafana/provisioning:/etc/grafana/provisioning
      - ./.infrastructure/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - influxdb
    links:
      - influxdb

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGODB_INIT_ROOT_USERNAME: default
      MONGODB_INIT_ROOT_PASSWORD: default
    volumes:
      - mongodb-data:/data/db

  elasticsearch:
    image: elasticsearch:8.6.1
    environment:
      - ELASTIC_PASSWORD=password
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: curl -s http://elasticsearch:9200 > /dev/null || exit 1

  nginx:
    image: nginx:1.23
    ports:
      - "8000:80"
    volumes:
      - ./.infrastructure/nginx:/etc/nginx/conf.d
    depends_on:
      - service

  service:
    depends_on:
      - mongodb
      - elasticsearch
    build:
      context: .
      dockerfile: .infrastructure/service/Dockerfile
    command: bash
    volumes:
      - .:/app:cached
    ports:
      - "8080:8080"
      - "2112:2112"

volumes:
  influxdb-data:
  grafana-data:
  mongodb-data:
  elasticsearch-data: